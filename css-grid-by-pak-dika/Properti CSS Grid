CSS Grid Properti

properti untuk container :
. grid-template-columns
. grid-templat-rows
. grid-auto-columns
. grid-auto-rows
. grid-auto-flow
. grid-template-areas
. grid-template
. grid-column-gap
. grid-row-gap
. grid-gap
. grid
. justify-items
. align-items
. place-items
. justify-content
. align-content
. place-content

properti untuk items :
. grid-column-start
. grid-column-end
. grid-row-start
. grid-row-end
. grid-column
. grid-row
. grid-area
. justify-self
. align-self
. place-self


. grid-template-columns & grid-template-rows :
mendefinisikan kolom / baris dengan cara menuslikan nilai dipisahkan oleh spasi. Nilai mempresentasikan ukuran grid track dan spasi mempresentasikan grid line.

. <track-size> : bisa berupa px, %, auto / fr (fraction).
. <line-name> : nama yang bisa di berikan pada track.

. fr (fraction) : 1fr 2fr 3.5fr


. Special Function & Keywords :
 - repeat() : menentukan ukuran grid track secara berulang.
    .container{ 
        display  : grid;
        grid-template-columns : repeat(9, 1fr);
       }

 - min-content & max-content : menentukan seberapa besar ukuran grid track berdasarkan content pada sebuah item.
    .container {
        display: grid;
        grid-template-columns: min-content | max-content;
        }

 - minmax() : menentukan ukuran minimal dan maksimal dari grid track.
    .container {
        display: grid;
        grid-template-columns: minmax(200px, 300px);
        }

 - auto-fill & auto-fit : menentukan jumlah item untuk berada pada grid track. 
    .container {
    display: grid;
    grid-template-columns: repeat(auto-fit, 150px);
    }
auto fit dan auto fill berguna untuk membuat konten konten yang responfive, dengan cacatan nilai containernya harus di beri nilai yang relative (%, em, rem)

- Grid template area : mendefinisikan grid template menggunakan nama dari area yang di tulis pada property grid-area pada item.
    .container{
        grid-template-areas:
        " <nama-area> | none | '.'"
        " <nama-area> | <nama-area> "
        }

. grid-template : shorthand dari grid-template-rows, grid-template-columns, grid-template-areas dalam satu deklarasi.
    . container{
        grid-template: <grid-template-areas> |  <grid-template-rows> / <grid-template-columns>;
        }

- grid-gap : membuat ukuran celah (gap) pada grid. (shorthand dari column-gap & row-gap).
    - column-gap & row-gap 

-grid : shorthand untuk properti-properti :
    grid-template-rows, grid-template-columns, 
    grid-template-areas, grid-auto-rows, 
    grid-auto-columns, grid-auto-flow

==============================================================

GRID ITEMS
1. justify-items : mensejajarkan grid-items pada sumbu horizontal.

    .container{
        justify-items: start | end | center | stretch ;
        }
    default : stertch; (berlaku jika tidak di atur widt-nya.

2. align-items : mensejajarkan grid-items pada sumbu vertical.

    .container{
        align-items: start | end | center | stretch ;
        }
    default : stertch; (berlaku jika tidak di atur heigth-nya.

3. place-items : shorthand untuk menuliskan justify-items dan align-items dalam satu deklarasi.

    .container{
        place-items: <align-items> <justify-items> ;
        }

4. justify-content: mengatur posisi seluruh grid container pada sumbu horizontal.

ini bisa dilakukan ketika ukuan grid lebih kecil dari ukuran containernya. biasanya ketika grid items nya menggunakan ukuran yang fixed (px). 

    .container{
        justify-content: start | end | center | stretch | space-around | space-between | space-evenly;
        }

5. align-content: mengatur posisi seluruh grid container pada sumbu vertical.

ini bisa dilakukan ketika ukuan grid lebih kecil dari ukuran containernya. biasanya ketika grid items nya menggunakan ukuran yang fixed (px). 

    .container{
        align-content: start | end | center | stretch | space-around | space-between | space-evenly;
        }

6. place-content:  shorthand untuk menuliskan justify-content dan align-content dalam satu deklarasi.

ini bisa dilakukan ketika ukuan grid lebih kecil dari ukuran containernya. biasanya ketika grid items nya menggunakan ukuran yang fixed (px). 

    .container{
        place-content: <justify-content> | <align-content>;
        }

===============================================================
properti untuk items :
. grid-column-start 
. grid-column-end
. grid-row-start
. grid-row-end
. menentukan tempat dari grid item dengan mengacu pada nomor atau nama grid line yang spesifik.

.item {
    grid-column-start: <nomor> | <nama> | span <nomor> | span <nama> | auto;
    grid-column-end: <nomor> | <nama> | span <nomor> | span <nama> | auto;
    grid-row-start: <nomor> | <nama> | span <nomor> | span <nama> | auto;
    grid-row-end: <nomor> | <nama> | span <nomor> | span <nama> | auto;

. <nomor> | <nama> : mengacu pada nomor atau nama yang kita beri pada grid line.
. span <nomor> : item akan memanjang / melebar sampai jumplah nomor. 
. span <nama> : item akan memanjang / melebar sampai ke nama grid line tertentu. 


. grid-column : shorthand untuk mendeklarasikan grid-column-start dan grid-colum-end dalam satu deklarasi.

. grid-row : shorthand untuk mendeklarasikan grid-row-start dan grid-row-end dalam satu deklarasi.

    .item {
        grid-column: <start-line> / <end-line> | <start-line> / span <value>;
        grid-row: <start-line> / <end-line> | <start-line> / span <value>;
    }


. grid-area : Menentukan nama area pada item sesuai dengan template yang sudah kita buat sebelumnya mmelalui properti grid-template-areas.

Bisa di gunkanan sebagai Shorthand untuk grid-column-start, grid-column-end, grid-row-start, grid-row-end.

untuk menentukan nama:
.item{
    grid-area: <nama>;
     }

untuk shorthand:
.item{
    grid-area: <row-start> / <column-start> / <column-start> / <olumn-end>;
     }

. justify-self : untuk mengatur posisi item pada sebuah cell pada sumbu horizontal.

. align-self : untuk mengatur posisi item pada sebuah cell pada sumbu vertical.

. place-self : shorthand untuk justify-self dan align-self dalam satu deklarasi.
    .item{
        place-self: <align-self> <jutify-self>;
        }



600x800 = 2
1024= 2


























